<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">
<dictionary title="Standard Terminology">
  <suite code="????" description="Common classes and commands for all applications." name="Standard Suite">
    <command code="aevtodoc" description="Open a document." name="open">
      <direct-parameter description="The file(s) to be opened.">
        <type type="file"/>
        <type list="yes" type="file"/>
      </direct-parameter>
      <result description="The opened document(s).">
        <type type="document"/>
        <type list="yes" type="document"/>
      </result>
    </command>
    <enumeration code="savo" name="save options">
      <enumerator code="yes " description="Save the file." name="yes"/>
      <enumerator code="no  " description="Do not save the file." name="no"/>
      <enumerator code="ask " description="Ask the user whether or not to save the file." name="ask"/>
    </enumeration>
    <command code="coreclos" description="Close a document." name="close">
      <cocoa class="NSCloseCommand"/>
      <access-group identifier="*"/>
      <direct-parameter description="the document(s) or window(s) to close." requires-access="r" type="specifier"/>
      <parameter code="savo" description="Should changes be saved before closing?" name="saving" optional="yes" type="save options">
        <cocoa key="SaveOptions"/>
      </parameter>
      <parameter code="kfil" description="The file in which to save the document, if so." name="saving in" optional="yes" type="file">
        <cocoa key="File"/>
      </parameter>
    </command>
    <command code="coresave" description="Save a document." name="save">
      <access-group identifier="*"/>
      <direct-parameter description="The document(s) or window(s) to save." requires-access="r" type="specifier"/>
      <parameter code="kfil" description="The file in which to save the document." name="in" optional="yes" type="file">
        <cocoa key="File"/>
      </parameter>
      <!-- BEGIN OMNI: might just remove this command, but might add a 'saveable file format' option and let users store their account settings as files?
			<parameter name="as" code="fltp" type="saveable file format" optional="yes" description="The file format to use.">
				<cocoa key="FileType"/>
			</parameter>
      -->
    </command>
    <enumeration code="enum" name="printing error handling">
      <enumerator code="lwst" description="Standard PostScript error handling" name="standard">
        <cocoa boolean-value="NO"/>
      </enumerator>
      <enumerator code="lwdt" description="print a detailed report of PostScript errors" name="detailed">
        <cocoa boolean-value="YES"/>
      </enumerator>
    </enumeration>
    <record-type code="pset" name="print settings">
      <property code="lwcp" description="the number of copies of a document to be printed" name="copies" type="integer">
        <cocoa key="NSCopies"/>
      </property>
      <property code="lwcl" description="Should printed copies be collated?" name="collating" type="boolean">
        <cocoa key="NSMustCollate"/>
      </property>
      <property code="lwfp" description="the first page of the document to be printed" name="starting page" type="integer">
        <cocoa key="NSFirstPage"/>
      </property>
      <property code="lwlp" description="the last page of the document to be printed" name="ending page" type="integer">
        <cocoa key="NSLastPage"/>
      </property>
      <property code="lwla" description="number of logical pages laid across a physical page" name="pages across" type="integer">
        <cocoa key="NSPagesAcross"/>
      </property>
      <property code="lwld" description="number of logical pages laid out down a physical page" name="pages down" type="integer">
        <cocoa key="NSPagesDown"/>
      </property>
      <property code="lwqt" description="the time at which the desktop printer should print the document" name="requested print time" type="date">
        <cocoa key="NSPrintTime"/>
      </property>
      <property code="lweh" description="how errors are handled" name="error handling" type="printing error handling">
        <cocoa key="NSDetailedErrorReporting"/>
      </property>
      <property code="faxn" description="for fax number" name="fax number" type="text">
        <cocoa key="NSFaxNumber"/>
      </property>
      <property code="trpr" description="for target printer" name="target printer" type="text">
        <cocoa key="NSPrinterName"/>
      </property>
    </record-type>
    <command code="aevtpdoc" description="Print a document." name="print">
      <direct-parameter description="The file(s), document(s), or window(s) to be printed.">
        <type list="yes" type="file"/>
        <type type="specifier"/>
      </direct-parameter>
      <parameter code="prdt" description="The print settings to use." name="with properties" optional="yes" type="print settings">
        <cocoa key="PrintSettings"/>
      </parameter>
      <parameter code="pdlg" description="Should the application show the print dialog?" name="print dialog" optional="yes" type="boolean">
        <cocoa key="ShowPrintDialog"/>
      </parameter>
    </command>
    <command code="aevtquit" description="Quit the application." name="quit">
      <cocoa class="NSQuitCommand"/>
      <parameter code="savo" description="Should changes be saved before quitting?" name="saving" optional="yes" type="save options">
        <cocoa key="SaveOptions"/>
      </parameter>
    </command>
    <command code="corecnte" description="Return the number of elements of a particular class within an object." name="count">
      <cocoa class="NSCountCommand"/>
      <access-group identifier="*"/>
      <direct-parameter description="The objects to be counted." requires-access="r" type="specifier"/>
      <parameter code="kocl" description="The class of objects to be counted." hidden="yes" name="each" optional="yes" type="type">
        <cocoa key="ObjectClass"/>
      </parameter>
      <result description="The count." type="integer"/>
    </command>
    <command code="coredelo" description="Delete an object." name="delete">
      <cocoa class="NSDeleteCommand"/>
      <access-group identifier="*"/>
      <direct-parameter description="The object(s) to delete." type="specifier"/>
    </command>
    <command code="coreclon" description="Copy an object." name="duplicate">
      <cocoa class="NSCloneCommand"/>
      <access-group identifier="*"/>
      <direct-parameter description="The object(s) to copy." requires-access="r" type="specifier"/>
      <parameter code="insh" description="The location for the new copy or copies." name="to" optional="yes" type="location specifier">
        <cocoa key="ToLocation"/>
      </parameter>
      <parameter code="prdt" description="Properties to set in the new copy or copies right away." name="with properties" optional="yes" type="record">
        <cocoa key="WithProperties"/>
      </parameter>
    </command>
    <command code="coredoex" description="Verify that an object exists." name="exists">
      <cocoa class="NSExistsCommand"/>
      <access-group identifier="*"/>
      <direct-parameter description="The object(s) to check." requires-access="r" type="any"/>
      <result description="Did the object(s) exist?" type="boolean"/>
    </command>
    <command code="corecrel" description="Create a new object." name="make">
      <cocoa class="NSCreateCommand"/>
      <access-group identifier="*"/>
      <parameter code="kocl" description="The class of the new object." name="new" type="type">
        <cocoa key="ObjectClass"/>
      </parameter>
      <parameter code="insh" description="The location at which to insert the object." name="at" optional="yes" type="location specifier">
        <cocoa key="Location"/>
      </parameter>
      <parameter code="data" description="The initial contents of the object." name="with data" optional="yes" type="any">
        <cocoa key="ObjectData"/>
      </parameter>
      <parameter code="prdt" description="The initial values for properties of the object." name="with properties" optional="yes" type="record">
        <cocoa key="KeyDictionary"/>
      </parameter>
      <result description="The new object." type="specifier"/>
    </command>
    <command code="coremove" description="Move an object to a new location." name="move">
      <cocoa class="NSMoveCommand"/>
      <access-group identifier="*"/>
      <direct-parameter description="The object(s) to move." requires-access="r" type="specifier"/>
      <parameter code="insh" description="The new location for the object(s)." name="to" type="location specifier">
        <cocoa key="ToLocation"/>
      </parameter>
    </command>
    <!-- BEGIN OMNI -->
    <command code="GURLGURL" description="Open a document from an URL." name="GetURL">
      <direct-parameter description="The URL of the file to be opened." type="text"/>
    </command>
    <!-- END OMNI -->
    <class code="capp" description="The application's top-level scripting object." name="application">
      <!-- BEGIN OMNI -->
      <cocoa class="Application"/>
      <!-- END OMNI -->
      <property access="r" code="pnam" description="The name of the application." name="name" type="text"/>
      <property access="r" code="pisf" description="Is this the active application?" name="frontmost" type="boolean">
        <cocoa key="isActive"/>
      </property>
      <property access="r" code="vers" description="The version number of the application." name="version" type="text"/>
      <element type="document">
        <cocoa key="orderedDocuments"/>
      </element>
      <element access="r" type="window">
        <cocoa key="orderedWindows"/>
      </element>
      <responds-to command="open">
        <cocoa method="handleOpenScriptCommand:"/>
      </responds-to>
      <responds-to command="print">
        <cocoa method="handlePrintScriptCommand:"/>
      </responds-to>
      <responds-to command="quit">
        <cocoa method="handleQuitScriptCommand:"/>
      </responds-to>
      <!-- BEGIN OMNI -->
      <responds-to command="GetURL">
        <cocoa method="handleOpenURLScriptCommand:"/>
      </responds-to>
      <!-- END OMNI -->
    </class>
    <class code="docu" description="A document." name="document">
      <cocoa class="NSDocument"/>
      <property access="r" code="pnam" description="Its name." name="name" type="text">
        <cocoa key="displayName"/>
      </property>
      <property access="r" code="imod" description="Has it been modified since the last save?" name="modified" type="boolean">
        <cocoa key="isDocumentEdited"/>
      </property>
      <property access="r" code="file" description="Its location on disk, if it has one." name="file" type="file">
        <cocoa key="fileURL"/>
      </property>
      <responds-to command="close">
        <cocoa method="handleCloseScriptCommand:"/>
      </responds-to>
      <responds-to command="print">
        <cocoa method="handlePrintScriptCommand:"/>
      </responds-to>
      <responds-to command="save">
        <cocoa method="handleSaveScriptCommand:"/>
      </responds-to>
    </class>
    <class code="cwin" description="A window." name="window">
      <cocoa class="NSWindow"/>
      <property access="r" code="pnam" description="The title of the window." name="name" type="text">
        <cocoa key="title"/>
      </property>
      <property access="r" code="ID  " description="The unique identifier of the window." name="id" type="integer">
        <cocoa key="uniqueID"/>
      </property>
      <property code="pidx" description="The index of the window, ordered front to back." name="index" type="integer">
        <cocoa key="orderedIndex"/>
      </property>
      <property code="pbnd" description="The bounding rectangle of the window." name="bounds" type="rectangle">
        <cocoa key="boundsAsQDRect"/>
      </property>
      <property access="r" code="hclb" description="Does the window have a close button?" name="closeable" type="boolean">
        <cocoa key="hasCloseBox"/>
      </property>
      <property access="r" code="ismn" description="Does the window have a minimize button?" name="miniaturizable" type="boolean">
        <cocoa key="isMiniaturizable"/>
      </property>
      <property code="pmnd" description="Is the window minimized right now?" name="miniaturized" type="boolean">
        <cocoa key="isMiniaturized"/>
      </property>
      <property access="r" code="prsz" description="Can the window be resized?" name="resizable" type="boolean">
        <cocoa key="isResizable"/>
      </property>
      <property code="pvis" description="Is the window visible right now?" name="visible" type="boolean">
        <cocoa key="isVisible"/>
      </property>
      <property access="r" code="iszm" description="Does the window have a zoom button?" name="zoomable" type="boolean">
        <cocoa key="isZoomable"/>
      </property>
      <property code="pzum" description="Is the window zoomed right now?" name="zoomed" type="boolean">
        <cocoa key="isZoomed"/>
      </property>
      <property access="r" code="docu" description="The document whose contents are displayed in the window." name="document" type="document"/>
      <responds-to command="close">
        <cocoa method="handleCloseScriptCommand:"/>
      </responds-to>
      <responds-to command="print">
        <cocoa method="handlePrintScriptCommand:"/>
      </responds-to>
      <responds-to command="save">
        <cocoa method="handleSaveScriptCommand:"/>
      </responds-to>
    </class>
  </suite>
  <suite code="OPrs" description="AppleScript commands and classes specific to OmniPresence." name="OmniPresence suite">
    <class-extension extends="application">
      <cocoa class="Application"/>
    </class-extension>
  </suite>
</dictionary>
